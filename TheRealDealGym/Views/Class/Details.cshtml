@model ClassDetailsModel
@inject IClassService classService
@inject ITrainerService trainerService
@inject IBookingService bookingService
@{
    ViewBag.Title = "Class Details";
}

<link rel="stylesheet" href="~/css/Class/Details.css" />

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="container" style="display:inline">
    <div class="row">
        <div class="card col-8 border-0">
            <p id="class-title">@Model.Title</p>
            <p>Class name: <span class="details">@Model.Title</span></p>
            <p>
                Price:
                <span class="details">
                    @String.Format("{0:f2}", Model.Price) BGN
                </span>
            </p>
            <p>Info: <span class="details">@Model.Description</span></p>
            <p>Category: <span class="details">@Model.Sport</span></p>
            <p>Trainer: <span class="details">@Model.Trainer</span></p>
            <p>Date: <span class="details">@Model.Date</span></p>
            <p>Time: <span class="details">@Model.Time</span></p>
            <p>Room: <span class="details">@Model.Room</span></p>
            <p>Spaces left: <span class="details">@Model.AvaliableSpaces</span></p>
            <div class="form-inline">
                @if (this.User.Identity!.IsAuthenticated)
                {
                    if (await classService.HasTrainerWithIdAsync(Model.Id, User.GetId()) || User.IsAdmin())
                    {
                        <div class="d-flex">
                            <form asp-controller="Class" asp-action="Edit" method="get">
                                <input type="hidden" name="classId" value="@Model.Id">
                                <button type="submit" class="btn btn-warning me-4">Edit</button>
                            </form>
                            <form asp-controller="Class" asp-action="Delete" method="get">
                                <input type="hidden" name="classId" value="@Model.Id">
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </div>
                    }
                    <p></p>
                    var bookingId = await bookingService.GetBookingIdAsync(User.GetId(), Model.Id);
                    @if (await bookingService.ExistsByIdAsync(bookingId) == false && await trainerService.ExistsByUserIdAsync(User.GetId()) == false)
                    {
                        @if (await classService.HasAvailableSpacesAsync(Model.Id))
                        {
                            <form asp-controller="Booking" asp-action="Book" method="post">
                                <input type="hidden" name="classId" value="@Model.Id">
                                <button type="submit" class="btn btn-success">Book</button>
                            </form>
                        }
                        else
                        {
                            <div id="booked-msg"><span>Class fully booked!</span></div>
                        }
                    }
                    else if (await bookingService.ExistsByIdAsync(bookingId) && await trainerService.ExistsByUserIdAsync(User.GetId()) == false)
                    {
                        <form asp-controller="Booking" asp-action="CancelBooking" method="post">
                            <input type="hidden" name="bookingId" value="(@await bookingService.GetBookingIdAsync(User.GetId(), Model.Id))">
                            <input class="btn btn-warning" type="submit" value="Cancel" onclick="return confirm('Are you sure you want to cancel this booking?')" />
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>
