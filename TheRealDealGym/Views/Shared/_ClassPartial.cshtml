@model ClassScheduleModel
@inject IClassService classService
@inject IBookingService bookingService
@inject ITrainerService trainerService

<div class="col-md-4">
    <div class="card mb-3">
        <div class="card-body text-center">
            <h4>@Model.Title</h4>
            <h6>Date: <b>@Model.Date</b></h6>
            <h6>Time: <b>@Model.Time</b></h6>
            <h6>Trainer: <b>@Model.Trainer</b></h6>
            <h6>
                Price:
                <b>@String.Format("{0:f2}", Model.Price) BGN</b>
            </h6>
            <br />
            <div class="d-flex">
                <form asp-controller="Class" asp-action="Details" method="get">
                    <input type="hidden" name="classId" value="@Model.Id">
                    <button type="submit" class="btn btn-primary">Details</button>
                </form>
                @if (this.User.Identity!.IsAuthenticated)
                {
                    if (await classService.HasTrainerWithIdAsync(Model.Id, User.GetId()) || User.IsAdmin())
                    {
                        <form asp-controller="Class" asp-action="Edit" method="get">
                            <input type="hidden" name="classId" value="@Model.Id">
                            <button type="submit" class="btn btn-warning">Edit</button>
                        </form>
                        <form asp-controller="Class" asp-action="Delete" method="get">
                            <input type="hidden" name="classId" value="@Model.Id">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    }
                    <p></p>
                    var bookingId = await bookingService.GetBookingIdAsync(User.GetId(), Model.Id);

                    @if (await bookingService.ExistsByIdAsync(bookingId) == false && await trainerService.ExistsByUserIdAsync(User.GetId()) == false)
                    {
                        @if (await classService.HasAvailableSpacesAsync(Model.Id))
                        {
                            <form asp-controller="Booking" asp-action="Book" method="post">
                                <input type="hidden" name="classId" value="@Model.Id">
                                <button type="submit" class="btn btn-success">Book</button>
                            </form>
                        }
                        else
                        {
                            <span style="margin: 6px 52px">Class fully booked!</span>
                        }
                }
                    else if (await bookingService.ExistsByIdAsync(bookingId) && await trainerService.ExistsByUserIdAsync(User.GetId()) == false)
                    {
                        <form asp-controller="Booking" asp-action="CancelBooking" method="post">
                            <input type="hidden" name="bookingId" value="(@await bookingService.GetBookingIdAsync(User.GetId(), Model.Id))">
                            <input class="btn btn-warning" type="submit" value="Cancel" onclick="return confirm('Are you sure you want to cancel this booking?')" />
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>
